name: deploy-example02
env:
  #
  # gh settings
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  C8Y_SETTINGS_ACTIVITYLOG_PATH: $GITHUB_WORKSPACE

  #
  # c8y settings
  C8Y_HOST: ${{ secrets.C8Y_HOST }}
  C8Y_USER: ${{ secrets.C8Y_USER }}
  # Use single quotes for the password to prevent any expansion problems with special chars like "#"
  C8Y_PASSWORD: '${{ secrets.C8Y_PASSWORD }}'
  KEEP_LAST: ${{ github.event.inputs.keep_last }}
  DEVICE_DEPLOYMENT_GROUP: ${{ github.event.inputs.device_deploy_group }}

on:
  workflow_dispatch:
    inputs:
      keep_last:
        description: 'Number of deployments to keep'
        required: false
        default: '5'
      
      deploy_ms:
        description: 'Deploy microservice?'
        required: false
        default: false
        type: boolean

      device_deploy_group:
        description: 'Deployment group name'
        required: false
        default: 'canary_10'
        type: string

  release:
    types: [released]  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reubenmiller/setup-go-c8y-cli@main

      - name: Build info
        run: |
          echo "date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Deploy web applications
        run: |
          ./2022-01-27/02-cicd/deploy-webapps.sh "$KEEP_LAST" < /dev/null

      - name: Deploy microservices
        if: ${{ github.event.inputs.deploy_ms && github.event.inputs.deploy_ms != 'false' }}
        run: |
          c8y microservices create --file ./2022-01-27/02-cicd/helloworld.zip --availability PRIVATE
        shell: bash

      - name: Deploy configuration to repository
        run: |
          cd ./2022-01-27/02-cicd/config
          ./deploy-config.sh < /dev/null
        shell: bash

      - name: Deploy software to repository
        run: |
          cd ./2022-01-27/02-cicd
          name=python3-c8ylp
          version=$(date +'%Y%m%d%H%M%S')
          deb_file="python3-c8ylp-2.0.0-$version.deb"

          echo "Faking a new binary file version: $deb_file"
          cp python3-c8ylp-2.0.0.deb "$deb_file"

          # Create software (if it does not exist)
          c8y software get -n --id "$name" --silentStatusCodes 404 || c8y software create -n --name "$name"

          # Create software version
          c8y software versions create -n --software "$name" --file "$deb_file"
        shell: bash

      - name: Install new version to software (canary)
        run: |
          cd ./2022-01-27/02-cicd
          ./install-software.sh "$DEVICE_DEPLOYMENT_GROUP" "c8y-command-plugin" < /dev/null
        shell: bash

      - name: Install new version to software remaining devices (main)
        run: |
          cd ./2022-01-27/02-cicd
          ./install-software.sh "main" "c8y-command-plugin" < /dev/null
        shell: bash

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: upload activity logs
          path: c8y.activitylog*.json
